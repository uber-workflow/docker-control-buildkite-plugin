#!/bin/bash

set -eo pipefail

echo "~~~ :docker: docker-control setup" >&2

SCRIPT=$BUILDKITE_COMMAND
IMAGE=$BUILDKITE_PLUGIN_DOCKER_CONTROL_IMAGE
COMPOSE_FILE=$BUILDKITE_PLUGIN_DOCKER_CONTROL_COMPOSE_FILE
SERVICE=$BUILDKITE_PLUGIN_DOCKER_CONTROL_SERVICE
SHOULD_BUILD=$BUILDKITE_PLUGIN_DOCKER_CONTROL_BUILD
ARTIFACT_DOWNLOAD=$BUILDKITE_PLUGIN_DOCKER_CONTROL_ARTIFACT_DOWNLOAD
export PACKAGE=$BUILDKITE_PLUGIN_DOCKER_CONTROL_PACKAGE

VERBOSE=""
if [ "$BUILDKITE_PLUGIN_DOCKER_CONTROL_VERBOSE" == "true" ]; then
  VERBOSE="--verbose"
fi

# retry <number-of-retries> <command>
function retry {
  local retries=$1; shift
  local attempts=1
  local status=0

  until "$@"; do
    status=$?
    echo "Exited with $status"
    if (( retries == "0" )); then
      return $status
    elif (( attempts == retries )); then
      echo "Failed $attempts retries"
      return $status
    else
      echo "Retrying $((retries - attempts)) more times..."
      attempts=$((attempts + 1))
      sleep $(((attempts - 2) * 2))
    fi
  done
}

echo "Running ${CMD} for ${PACKAGE} in ${IMAGE}"

# Try killing all docker-compose containers to ensure there's no conflicting running containers.
docker kill $(docker ps -q) || true
docker volume rm $(docker volume ls -q) > /dev/null 2>&1 || true

if [ ! "$BUILDKITE_PIPELINE_NAME" = "web-code-task-runner" ]; then
  # Update artifact folders for web-code.
  chmod -R 777 "artifacts" || true
  chmod -R 777 "${PACKAGE}/artifacts" || true
  rm "artifacts/.gitignore" || true
  rm "${PACKAGE}/artifacts/.gitignore" || true
fi

if [ "$BUILDKITE_PIPELINE_NAME" = "web-code-task-runner" ]; then
  chmod 777 "artifacts" || true
fi

# download artifact, if specified
if [ -n "$ARTIFACT_DOWNLOAD" ]; then
  echo "--- :arrow_heading_down: downloading artifacts ${ARTIFACT_DOWNLOAD}"
  set +e
  buildkite-agent artifact download "${ARTIFACT_DOWNLOAD}" .
  chmod -R 777 $(dirname "${ARTIFACT_DOWNLOAD}")
  if [ $? -ne 0 ]; then
    echo "Artifact ${ARTIFACT_DOWNLOAD} not found. Continuing..."
  fi
  set -e
fi

if [ -n "$SHOULD_BUILD" ]; then
  set +e
  COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 IMAGE=$IMAGE docker-compose $VERBOSE -f $COMPOSE_FILE build --progress=plain $SERVICE
  if [ $? = 255 ]; then
    exit 1
  fi
  set -e
fi

if [ -z $SCRIPT ]
then
  echo "+++ :docker: docker-control run" >&2
  IMAGE=$IMAGE docker-compose $VERBOSE -f $COMPOSE_FILE run --rm $SERVICE
else
  echo "+++ :docker: docker-control run" >&2
  IMAGE=$IMAGE docker-compose $VERBOSE -f $COMPOSE_FILE run --rm $SERVICE bash $SCRIPT
fi
